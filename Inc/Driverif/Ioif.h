#ifndef __IOIF_H__
#define __IOIF_H__
#include "public.h"
#include "user_init.h"


typedef enum
{
/*PA0 - PA15*/
	GPIO_NUMBER_0 = 0,
	GPIO_NUMBER_1 = 1,
	GPIO_NUMBER_2 = 2,
	GPIO_NUMBER_9_Motor4_P_EN = 3,
	GPIO_NUMBER_3_Motorback_P_EN = 4,
	GPIO_NUMBER_4_Motorback_N_EN = 5,
	GPIO_NUMBER_7_Motor3_P_EN = 6,
	GPIO_NUMBER_8_Motor3_N_EN = 7,
	GPIO_NUMBER_5_Motorseat_P_EN = 8,
	GPIO_NUMBER_6_Motorseat_N_EN = 9,
	GPIO_NUMBER_10_Motor4_N_EN = 10,
	GPIO_NUMBER_11 = 11,
	GPIO_NUMBER_23_Seat_B_SW_IO = 12,
	GPIO_NUMBER_13 = 13,
	GPIO_NUMBER_14 = 14,
	GPIO_NUMBER_15 = 15,
/*PB0~PB15*/
	GPIO_NUMBER_16_Seat_FastF_SW_IO = 16,
	GPIO_NUMBER_17,	
	GPIO_NUMBER_18,
	GPIO_NUMBER_19,
	GPIO_NUMBER_20,	
	GPIO_NUMBER_21,
	GPIO_NUMBER_22,
	GPIO_NUMBER_42_Seat3_B_SW_IO	=	23	,
	GPIO_NUMBER_24,
	GPIO_NUMBER_25,
	GPIO_NUMBER_26_VBAT_SW_EN = 26,
	GPIO_NUMBER_32_Seat3_F_SW_IO,	
	GPIO_NUMBER_38_Seat4_B_SW_IO	=	28	,
	GPIO_NUMBER_29,	
	GPIO_NUMBER_30,
	GPIO_NUMBER_31,
	
/*PC0~PC15*/
	GPIO_NUMBER_27_Seat_F_SW_IO = 32,
	GPIO_NUMBER_33	=	33	,
	GPIO_NUMBER_34	=	34	,
	GPIO_NUMBER_35	=	35	,
	GPIO_NUMBER_36	=	36	,
	GPIO_NUMBER_37	=	37	,
	GPIO_NUMBER_28_SBR_IO,
	GPIO_NUMBER_39 =	39	,
	GPIO_NUMBER_40	=	40	,
	GPIO_NUMBER_41	=	41	,
	GPIO_NUMBER_43,
	GPIO_NUMBER_61_Seat4_F_SW_IO=	43	,
	GPIO_NUMBER_44	=	44	,
	GPIO_NUMBER_45_SBR_LOCK_IO	=	45	,
	GPIO_NUMBER_46_CAN_STB	=	46	,
	GPIO_NUMBER_47	=	47	,
/*PD0~PD12*/

	GPIO_NUMBER_48	=	48	,
	GPIO_NUMBER_49	=	49	,
	GPIO_NUMBER_50	=	50	,
	GPIO_NUMBER_51	=	51	,
	GPIO_NUMBER_52	=	52	,
	GPIO_NUMBER_53_IGN_INT	=	53	,
	GPIO_NUMBER_54	=	54	,
	GPIO_NUMBER_55	=	55	,
	GPIO_NUMBER_56	=	56	,
	GPIO_NUMBER_57_Seatback_F_SW_IO,
	GPIO_NUMBER_58	=	58	,
	GPIO_NUMBER_59	=	59	,
	GPIO_NUMBER_60	=	60	,
/*PE0~PE9*/
	GPIO_NUMBER_69_Seat_FastB_SW_IO	=	61	,
	GPIO_NUMBER_62	=	62	,
	GPIO_NUMBER_63	=	63	,
	GPIO_NUMBER_65	=	64	,
	GPIO_NUMBER_66	=	65	,
	GPIO_NUMBER_67	=	66	,
	GPIO_NUMBER_68_VDD_EN	=	67	,
	GPIO_NUMBER_12_SeatBack_B_SW_IO	=	68	,
	GPIO_NUMBER_MAX = 70
}Ioif_Gpio_Num_e;

#if 0
FL_GPIO_EXTI_LINE_3,//PA12
FL_GPIO_EXTI_LINE_14,//PD9
FL_GPIO_EXTI_LINE_18,//PE8
FL_GPIO_EXTI_LINE_4,//PB0
FL_GPIO_EXTI_LINE_5,//PB7
FL_GPIO_EXTI_LINE_6,//PB11
FL_GPIO_EXTI_LINE_7,//PB12
FL_GPIO_EXTI_LINE_11,//PC13
FL_GPIO_EXTI_LINE_8,//PC0
FL_GPIO_EXTI_LINE_9,//PC6
FL_GPIO_EXTI_LINE_10,//PC11
FL_GPIO_EXTI_LINE_13,//PD5
FL_GPIO_EXTI_LINE_16,//PE0
#endif
	
typedef enum
{
	GPIO_EXTI_0 = 0,
	GPIO_EXTI_1,	
	GPIO_EXTI_2,
	GPIO_EXTI_3,
	GPIO_EXTI_4,
	GPIO_EXTI_5,
	GPIO_EXTI_6,
	GPIO_EXTI_7,
	GPIO_EXTI_8  = 8,
	GPIO_EXTI_9  ,
	GPIO_EXTI_10 ,
	GPIO_EXTI_11 ,
	GPIO_EXTI_12 ,
	GPIO_EXTI_13 ,
	GPIO_EXTI_14 ,
	GPIO_EXTI_15 ,
	GPIO_EXTI_16 = 16,
	GPIO_EXTI_17 ,
	GPIO_EXTI_18 ,
	GPIO_EXTI_NUMBER_MAX = 19
}Ioif_EXTI_Num_e;
	

extern void Ioif_GPIO_Init(void);
extern void Ioif_GPIO_DeInit(void);
extern uint8_t Ioif_GetPinLevel(Ioif_Gpio_Num_e GpioNum_u8);
extern uint8_t Ioif_SetPinLevel(Ioif_Gpio_Num_e GpioNum_u8,uint8_t GpioLevel_u8);

extern void Ioif_ClearAll_WakeupSrc(void);
extern void Ioif_Set_WakeupSrc(uint8_t fl_index_u8);
extern uint8_t Ioif_Get_WakeupSrc(uint8_t fl_index_u8);


#endif
